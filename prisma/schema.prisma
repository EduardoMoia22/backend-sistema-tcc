// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int       @id @default(autoincrement())
  name           String
  bar_code       String?
  reference      String?
  manufacturer   Manufacturer? @relation(fields: [manufacturerID], references: [id])
  manufacturerID Int
  group          Group? @relation(fields: [groupID], references: [id])
  groupID        Int
  price          Float
  description    String
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  active         Boolean   @default(true)

  stock   Stock @relation(fields: [stockID], references: [id])
  stockID Int

  items Item[]

  @@map("products")
}

model Manufacturer {
  id   Int    @id @default(autoincrement())
  name String

  products Product[]

  @@map("manufacturers")
}

model Group{
  id Int @id @default(autoincrement())
  name String

  products Product[]
}

model Client {
  id         Int       @id @default(autoincrement())
  name       String
  fantasy    String
  cpf        String?
  cnpj       String?
  fundation  String
  birthday   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  sales Sale[]

  @@map("clients")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Sale {
  id       String  @id @default(uuid())
  open     Boolean @default(true)
  client   Client? @relation(fields: [clientID], references: [id])
  clientID Int?

  payment   PaymentMethods @relation(fields: [paymentID], references: [id])
  paymentID Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  items              Item[]
  account_receivable AccountsReceivable[]

  @@map("sales")
}

model Item {
  id     String @id @default(uuid())
  amount Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  sale   Sale   @relation(fields: [saleID], references: [id])
  saleID String

  product   Product @relation(fields: [productID], references: [id])
  productID Int

  @@map("items")
}

model PaymentMethods {
  id                  Int     @id @default(autoincrement())
  name                String
  accounts_receivable Boolean @default(false)
  sales               Sale[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("payment-methods")
}

model AccountsReceivable {
  id     String @id @default(uuid())
  sale   Sale   @relation(fields: [saleID], references: [id])
  saleID String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("accounts-receivable")
}

model Stock {
  id       Int     @id @default(autoincrement())
  stockMin Int
  stock    Int
  active   Boolean @default(true)

  product Product[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("stocks")
}
